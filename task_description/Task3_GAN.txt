Assignment - Final - Task 3 - GAN
=================================

Please refer to ReadMe.txt for general rules for this final assignment.

In this task, you shall train a Generative Adversarial Network (GAN) to generate data similar to the training set.

You shall use the provided code to generate your train data.
Keep the images small - 32 pixels - with a single object of one of the four categories with max size 24 pixels.
You can generate as many examples for the training set as you wish (10000 may be a good number).

You shall implement and train two models: a standard GAN as in the Goodfellow paper and a Wasserstein GAN as in the Arjovsky paper. 
These models shall have the same architecture, however, they shall be trained differently by using the appropriate loss.
The architecture can be fairly simple, do not go for too complicated models.

You shall follow the instructions for the content of the report as explained in ReadMe.txt. 
In addition, for both models - GAN and WGAN - you shall use the final trained versions to:
* Print 10 examples of images generated by the generator when starting from random latent vectors.
* Compare the results for GAN and WGAN, and discuss the training challenges and results.

References: 
* Goodfellow, I., Pouget-Abadie, J., Mirza, M., Xu, B., Warde-Farley, D., Ozair, S., ... & Bengio, Y. (2014). Generative adversarial nets. Advances in neural information processing systems, 27.
* Arjovsky, M., Chintala, S., & Bottou, L. (2017, July). Wasserstein generative adversarial networks. In International conference on machine learning (pp. 214-223). PMLR.
* Tutorials, blogs etc. online


